- name: ------ create directory1 in /home ------
  file: path=/home/dir1 state=directory owner=root group=root mode=0755
  tags: create_dir1

- name: ------ create directory2 in /home ------
  file:
    path: /home/dir2
    state: directory
    owner: root
    group: root
    mode: 0755
  tags: create_dir2

- name: ------ create file1 in /home/dir1 ------
  file: path=/home/dir1/file1 state=touch owner=root group=root mode=0644
  tags: create_file1

- name: ------ create file2 in /home/dir2 ------
  file:
    path: /home/dir2/file2
    state: touch
    owner: root
    group: root
    mode: 0644
  tags: create_file2

- set_fact: myvar=123

- name: ------ show myvar ------
  debug: 
    msg: "{{ myvar }}"
  tags: debug_mod

- name: ------ show test_var ------
  debug: 
    msg: "{{ test_var }} --- {{ test_var2 }}"
  tags: show_test_var

- name: ------ show myvariable ------
  debug: 
    msg: "{{ myvariable }}"
  tags: show_myvariable

- name: ------ show person info ------
  debug: 
    msg: "firstname: {{ person.name.first_name }}, lastname: {{ person.name.last_name }}, city: {{ person.city }} "
  tags: show_person_info

- name: ------ show user list ------
  debug: 
    msg: "{{user_lists}} "
  tags: show_user_list

- name: ------ show user list 2 ------
  debug: 
    msg: "{{user_lists_2}} "
  tags: show_user_list_2

- name: ------ show user list 2 index 0 ------
  debug: 
    msg: "{{user_lists_2[0]}} "
  tags: show_user_list_2_index

- name: ------ show mytest variable ------
  debug: 
    msg: "{{mytest}} "
  tags: show_mytest_variable

# - name: ------ show package name ------
#  debug: 
#    msg: "{{package_name}} "
#  tags: show_package

- name: ------ show build-in variables ------
  debug: 
    msg: "{{ hostvars }} "
  tags: show_hostvars

- set_fact: exercisevar="Exercise_number_6_2"
  tags: show_exercisevar

- name: ------ show my variables ------
  debug: 
    msg: "{{ exercisevar }} "
  tags: show_exercisevar

- name: ------ show group variables ------
  debug: 
    msg: "{{ http_port}} "
  tags: show_group_variables

- name: ------ command module ------
  command: mkdir -/home/test1
  tags: command_module

- name: ------ command module cat ------
  command: cat file1
  args:
    chdir: /home/dir1
    creates: /home/dir4
    removes:
  register: catty
  tags: command_module_cat

- name: ------ show catty variables ------
  debug: 
    msg: "{{ catty.stdout }} "
  tags: command_module_cat

- name: ------ command module df ------
  command: df -h
  register: command_df
  tags: command_module_df

- name: ------ show command_df variables ------
  debug: 
    msg: "{{ command_df.stdout_lines }} "
  tags: command_module_df

- name: ------ expect module ------
  expect:
    command: passwd ali
    responses:
      password: "Anisa"
  no_log: true
  tags: expect_mod

- name: ------ script module ------
  script: echo.sh
  register: scp_var
  tags: script_mod

- name: ------ show scp_var variables ------
  debug: msg="{{ scp_var.stdout_lines }} "
  tags: script_mod

- name: ------ shell module ------
  shell: echo "Test shell module" > /home/shellout.tmp
  tags: shell_mod

- name: ------ copy module ------
  copy:
    src: myfile.txt
    dest: /home/dir2
    owner: root
    group: root
    mode: 0644
    force: yes
    backup: yes
  tags: copy_mod

- name: ------ fetch module ------
  fetch:
    src: /home/dir1/file1
    dest: /home/
    flat: no
    validate_checksum: yes
  tags: fetch_mod

- name: ------ group module ------
  group:
    name: DevOps
    state: present
  tags: group_mod

- name: ------ user module ------
  user:
    name: test-user
    group: DevOps
    state: present
    shell: /bin/bash
    home: /tmp/test-user
    password: 123
  tags: user_mod

- name: ------ yum repository ------
  yum_repository:
    name: local-repository
    description: local repository
    baseurl: http://repo.sinacomsys.local:9099/repository/yum-photon/$releasever/photon_$releasever_$basearch
    gpgcheck: no
    enabled: yes
    state: present
  tags: yum_repo_mod

- name: ------ yum install nginx ------
  yum:
    name: nginx
    state: present
  tags: yum_mod

- name: ------ yum update nginx ------
  yum:
    name: nginx
    state: latest
    update_only: yes
  tags: yum_update

- name: ------ yum update all ------
  yum:
    name: '*'
    state: latest
    exclude: kernel*
  tags: yum_update_all

- name: ------ template module ------
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    backup: yes
    force: yes
  tags: template_mod

- name: ------ lineinfile module ------
  lineinfile:
    path: /etc/nginx/nginx.conf
    insertafter: '        listen 80'
    line: '        listen 8081'
    state: absent
  tags: lineinfile_mod

- name: ------ replace module ------
  replace:
    path: /etc/nginx/nginx.conf
    regexp: '        listen 80'
    replace: '        listen 8082'
    backup: yes
  tags: replace_mod

- name: ------ archive module ------
  ansible.builtin.unarchive:
    path: /home/testdir/*
    dest: /home/test.tar.gz
    exclude_path:
      - file1
      - file2
  tags: archive_mod

